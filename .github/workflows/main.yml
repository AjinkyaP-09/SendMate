- name: Run Ansible Deployment
  env:
    ANSIBLE_PRIVATE_KEY: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
    ANSIBLE_HOST_KEY_CHECKING: "False"
  run: |
    sudo apt-get update
    sudo apt-get install -y ansible sshpass

    # Get clean IP address from Terraform output
    terraform -chdir=terraform output -raw public_ip > ip_address.txt
    IP_ADDRESS=$(cat ip_address.txt | tr -d '\r' | tr -d '\n' | xargs)

    echo "üìç Cleaned IP Address: '$IP_ADDRESS'"

    if [[ ! "$IP_ADDRESS" =~ ^[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
      echo "‚ùå Error: Invalid or empty IP address from Terraform output"
      exit 1
    fi

    echo "$ANSIBLE_PRIVATE_KEY" > private_key.pem
    chmod 600 private_key.pem

    echo "‚è≥ Waiting for EC2 to be ready..."
    sleep 30

    ansible-playbook ansible/playbook.yml \
      --inventory "$IP_ADDRESS," \
      --private-key private_key.pem \
      --user ec2-user \
      --extra-vars "dockerhub_username=${{ secrets.DOCKERHUB_USERNAME }} mongo_uri=${{ secrets.MONGO_URI }} google_client_id=${{ secrets.GOOGLE_CLIENT_ID }} google_client_secret=${{ secrets.GOOGLE_CLIENT_SECRET }} aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }} aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }} aws_region=ap-south-1 aws_bucket_name=${{ secrets.AWS_BUCKET_NAME }}"

    rm private_key.pem

# .github/workflows/main.yml

name: Build and Deploy Sendmate

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository Code
        uses: actions/checkout@v3

      # STEP 1: Build Docker image and push to registry
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./backend
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/sendmate:latest

      # STEP 2: Provision infrastructure with Terraform
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-south-1

      - name: Terraform Init
        run: terraform init
        working-directory: ./terraform

      - name: Terraform Apply
        run: terraform apply -auto-approve -var="ec2_key_pair_name=${{ secrets.EC2_KEY_PAIR_NAME }}"
        working-directory: ./terraform

      # NEW: Save Terraform output to a file
      - name: Save Terraform Output
        run: terraform output -json > tf_outputs.json
        working-directory: ./terraform

      # NEW: Read the IP address from the file
      - name: Get IP Address from Output File
        id: get_ip
        run: |
          ip=$(jq -r '.public_ip.value' terraform/tf_outputs.json)
          echo "ip_address=$ip" >> $GITHUB_OUTPUT

      # STEP 3: Configure and deploy with Ansible
      - name: Wait for instance to initialize
        run: sleep 5 # Reduced sleep time as requested

      - name: Run Ansible Playbook
        uses: dawidd6/action-ansible-playbook@v2
        with:
          playbook: playbook.yml
          directory: ./ansible
          key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}
          # DEFINITIVE FIX: Use the IP from the dedicated step
          inventory: "${{ steps.get_ip.outputs.ip_address }},"
          options: |
            --extra-vars "dockerhub_username=${{ secrets.DOCKERHUB_USERNAME }} mongo_uri=${{ secrets.MONGO_URI }} google_client_id=${{ secrets.GOOGLE_CLIENT_ID }} google_client_secret=${{ secrets.GOOGLE_CLIENT_SECRET }} aws_access_key_id=${{ secrets.AWS_ACCESS_KEY_ID }} aws_secret_access_key=${{ secrets.AWS_SECRET_ACCESS_KEY }} aws_region=${{ secrets.AWS_REGION }} aws_bucket_name=${{ secrets.AWS_BUCKET_NAME }}"
